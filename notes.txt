1     you should  not  watch  super long videos  because 
            it is not effective to learn from  long 
            tutorials 


2      route  handling :   in  our  route we can do  many things : 
                   1   fetch  data from database 
                   2    load pages 
                   3  return json
                   4  full access to request and response
3   middleware :   are functions that can access both request  and the response
     
4  https://dev.to/cassiocappellari/basic-concepts-of-node-js-pch
this is the link to the  node tutorial 

5 install  the nodemon :    install then change  the package.json and then just run dev 
6    log is in the terminal
7    node .js  modules
8   you can also   display   html with  javascript and css that way 
                          const path  = require('path')              // 
                          app.use(express.static(path.join(__dirname ,  'public')))
                          you have to create folder  called public  and put  html file there




 9      how to learn   node js  :
                try   first w3 schools   and then   watch his video











 /////////////////////////////////////////
 CODE EXAMPLE




 const  members =   require('./public/app')
const express  =  require('express')     //    module usage
const app  =   express();  
const moment  =  require('moment')




const path  = require('path')              // 
app.use(express.static(path.join(__dirname ,  'public')))
app.get('/api/members'  ,   (req , res)=>{
    res.json(members)
})
app.get('/m'    ,   (req ,  res)=>{
    res.send(`${moment().format()}`)
})



//middleWare
const logger =  (req,  res ,  next)=>{
    console.log('hello   middleware');
    next()
}
app.use(logger)


//     in this  example the res is the  our response 
const PORT =process.env.PORT || 5000;       //  here   we listen to the port
app.listen(PORT , ()=>{                     
    console.log(`server is running on port  `  + PORT);
});
 
//////////////////////////////////////////////                      






learn   about   middleWare

do the  basic bolierplate 


middleeware is the programm  that happens between   get and send methods 

middleare is run  first before all  functions  if  it is defined globally 
get  request  and the rsponse are  actions 


middleware  usuallly  takes  care of what  before or  after actions 
when  you call  next()  function next it  calls  another function aka
another middleare

it  runs   in order that  you define -  aka  : 
                              actual order of  your CODE
                              func1(){}
                              func2(){}
                              in this  ex .  func1  is run first  and then  func2
                              BUT   if you have 5 functions defined   but  
                              if you dont  use  next()   in   all  of them  they  wont  run
                              for ex  in  in  func1   you did  not  define  the next()
                              the  func2  will not run 


                              so it is a good pracitice to define the middleware at the very top 

 as well  you can  define the middleare  inside of the the 'get '  function 
   so they are   attached to the specific  function



   Express servers receive data from the client side through the req object in three instances:
    the req.params, req.query, and req.body objects.      




a good  thing is thay  the middleare  can  access the req  and res  params:
in ex  below  we check  the link  of users link
if  http://localhost:5000/users?admin=true  
then   it  gives us log(authenticated)
if not then   res.sends  to screeen  the message  'no  auth'

 
function   Auth(req  ,res  ,   next){
   if (req.query.admin==='true'){
       console.log('user  is authenticated');
       next()
   }else {
       res.send('no  auth')
   }
      
 
    
  IT  is  better to  encounter the problem  first and then   learn  about it 
    for ex now i have to learn  about http   and links  after 
    i  started  learing the express 

    
}                          



////////////////////////
ROUTES
you think of the idea  that you  probably will have  a lot of subroutes
like     user/one
    user/tow
    user/product
    user/list

    and for all of the,  you will use the route 
    1  you difene  route in  separate file 
    2  then   there  you builld the routes 
    3  the routs is  exactly like the app
    4  epxort  the file and then   you accosiate the link type with route : 
                  like that : 
                  app.use('/user'  ,     routeUse)
                  so  routeuse  manages  all  after the link 'user'
                  







